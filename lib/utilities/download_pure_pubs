#!/usr/bin/env ruby

require 'json'
require 'pathname'
require 'io/console'

def root_dir
  Pathname.new(File.expand_path(File.dirname(__FILE__) + '/../..'))
end

def data_dir
  root_dir.join('db', 'data')
end

def pure_pub_dir
  data_dir.join('pure_publications')
end

def download_pure_pubs
  print "Enter Pure API key:  "
  api_key = STDIN.noecho(&:gets).chomp

  puts "\n"

  first_pub_result = `curl -X GET --header 'Accept: application/json' --header 'api-key: #{api_key}' 'https://pennstate.pure.elsevier.com/ws/api/511/research-outputs?navigationLink=false&size=1&offset=0'`

  page_size = 1000
  total_pubs = JSON.parse(first_pub_result)['count']

  download_dir = root_dir.join('db', 'data', 'pure_publications')

  total_pages = (total_pubs / page_size.to_f).ceil

  1.upto(total_pages) do |i|
    offset = (i-1) * page_size
    pubs = `curl -X GET --header 'Accept: application/json' --header 'api-key: #{api_key}' 'https://pennstate.pure.elsevier.com/ws/api/511/research-outputs?navigationLink=false&size=#{page_size}&offset=#{offset}'`
    download_file = download_dir.join("pure_publications_#{i}.json")
    File.open(download_file, 'w') do |f|
      f.puts pubs
    end
  end
end

if Dir.exists?(pure_pub_dir) && ! Dir.empty?(pure_pub_dir)
  print "Pure publication data is already present. Overwrite (Yn)?  "
  overwrite = gets.chomp

  if overwrite == 'Y'
    download_pure_pubs
  end

else
  Dir.mkdir data_dir unless Dir.exists? data_dir
  Dir.mkdir pure_pub_dir unless Dir.exists? pure_pub_dir

  download_pure_pubs
end
